@page "/"
@using BandBookerData;
@using BandBookerData.Models;
@using Microsoft.AspNetCore.Components;


<h2>Instruments</h2>
<select @onchange="InstrumentSelected" size="10" style="width:100%;" disabled="@DisableInstrumentList">
    @foreach (var instrument in AllInstruments)
    {
        @if (SelectedInstrument != null && instrument.InstrumentId == SelectedInstrument.InstrumentId)
        {
            <option selected value="@instrument.InstrumentId.ToString()"> @instrument.Name </option>
        }
        else 
        {
            <option value="@instrument.InstrumentId.ToString()">@instrument.Name</option>
        }
    }
</select>
<br />

<button class="btn btn-primary" type="button" disabled="@DisableInstrumentList" @onclick="NewInstrumentButtonClick">New</button>
<button class="btn btn-secondary my-3" type="button" disabled="@DisableInstrumentEditButton" @onclick="EditInstrumentButtonClick">Edit</button>
<button class="btn btn-danger" type="button" disabled="@DisableInstrumentEditButton" @onclick="DeleteInstrumentButtonClick">Delete</button>

<br />
<span class="text-danger">@InstrumentErrorMessage</span>


@code {


    bool DisableInstrumentList = false;
    bool DisableInstrumentEditButton = true;

    string InstrumentErrorMessage = "";

    Instrument SelectedInstrument;
    List<Instrument> AllInstruments = new List<Instrument>();


    protected override void OnInitialized()
    {
        AllInstruments = DataManager.Instruments;
    }

    void InstrumentSelected(ChangeEventArgs args)
    {
        InstrumentErrorMessage = "";
        string instrumentId = args.Value.ToString();

        SelectedInstrument = (from x in AllInstruments
                              where x.InstrumentId.ToString() == instrumentId.ToString()
                              select x).FirstOrDefault();

        if(SelectedInstrument != null)
        {
            DisableInstrumentEditButton = false;
        }
        else
        {
            DisableInstrumentEditButton = true;
        }
    }

    void NewInstrumentButtonClick()
    {

    }

    void EditInstrumentButtonClick()
    {

    }

    void DeleteInstrumentButtonClick()
    {
        if(SelectedInstrument != null)
        {
            InstrumentErrorMessage = DataManager.DeleteInstrument(SelectedInstrument);

            if(InstrumentErrorMessage == "")
            {
                AllInstruments.Remove((from x in AllInstruments
                                       where x.InstrumentId == SelectedInstrument.InstrumentId
                                       select x).First());

                if(AllInstruments.Count > 0)
                {
                    SelectedInstrument = AllInstruments.First(); // automatically select first instrument 
                }
            }
        }
    }


}